services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: bangjwo
    ports:
      - "13306:3306"
    volumes:
      - db-volume:/var/lib/mysql
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bangjwo-network

  mongo-db:
    image: mongo:7.0
    container_name: mongo-db
    restart: always
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - /home/ubun2/mongodb/data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
    healthcheck:
      test: [ "CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      bangjwo-network:
        aliases:
          - mongo

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on:
      mongo-db:
        condition: service_healthy
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${ME_CONFIG_MONGODB_ADMINUSERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${ME_CONFIG_MONGODB_ADMINPASSWORD}"
      ME_CONFIG_MONGODB_SERVER: mongo
    healthcheck:
      test: [ "CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bangjwo-network

  redis:
    image: redis:7.0
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "sh", "-c", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bangjwo-network

  bangjwo:
    build: .
    container_name: bangjwo
    depends_on:
      mysql-db:
        condition: service_healthy
      mongo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/bangjwo?serverTimezone=UTC&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: bangjwo
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      RSA_PUBLIC_KEY: "${RSA_PUBLIC_KEY}"
      RSA_PRIVATE_KEY: "${RSA_PRIVATE_KEY}"
    networks:
      - bangjwo-network

volumes:
  db-volume:

networks:
  bangjwo-network:
    driver: bridge