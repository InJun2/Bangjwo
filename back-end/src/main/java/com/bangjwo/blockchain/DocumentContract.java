package com.bangjwo.blockchain;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

import io.reactivex.Flowable;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/hyperledger-web3j/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.6.3.
 */
@SuppressWarnings("rawtypes")
public class DocumentContract extends Contract {
	public static final String BINARY = "0x60a06040523480156200001157600080fd5b506040516200129f3803806200129f83398181016040528101906200003791906200014e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a090620001e1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000203565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200011682620000e9565b9050919050565b620001288162000109565b81146200013457600080fd5b50565b60008151905062000148816200011d565b92915050565b600060208284031215620001675762000166620000e4565b5b6000620001778482850162000137565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964206f776e657220616464726573730000000000000000000000600082015250565b6000620001c960158362000180565b9150620001d68262000191565b602082019050919050565b60006020820190508181036000830152620001fc81620001ba565b9050919050565b6080516110816200021e6000396000608901526110816000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806314d703031461003b578063774eb0e814610057575b600080fd5b610055600480360381019061005091906108ee565b610087565b005b610071600480360381019061006c9190610976565b610315565b60405161007e9190610a46565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010c90610ab4565b60405180910390fd5b600080600087815260200190815260200160002060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161461018b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018290610b20565b60405180910390fd5b6101958484610509565b6101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cb90610b8c565b60405180910390fd5b604051806060016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018367ffffffffffffffff1681526020018267ffffffffffffffff16815250600080878152602001908152602001600020600082015181600001908161026e9190610de7565b5060208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550905050847f312ba4acef62bb1f27e1e1c605e426873e8a577eae0aee9bcb773edf429a559e858585856040516103069493929190610f04565b60405180910390a25050505050565b6060600080600085815260200190815260200160002060405180606001604052908160008201805461034690610c0a565b80601f016020809104026020016040519081016040528092919081815260200182805461037290610c0a565b80156103bf5780601f10610394576101008083540402835291602001916103bf565b820191906000526020600020905b8154815290600101906020018083116103a257829003601f168201915b505050505081526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505090506000816020015167ffffffffffffffff160361047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047690610f90565b60405180910390fd5b806020015167ffffffffffffffff168367ffffffffffffffff1614806104bc5750806040015167ffffffffffffffff168367ffffffffffffffff16145b6104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290610ffc565b60405180910390fd5b806000015191505092915050565b60008083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509050600081519050602e8103610638577f5100000000000000000000000000000000000000000000000000000000000000826000815181106105965761059561101c565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561062f57507f6d0000000000000000000000000000000000000000000000000000000000000082600181518110610600576105ff61101c565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b92505050610803565b6031811015801561064a5750603b8111155b156107fc577f6200000000000000000000000000000000000000000000000000000000000000826000815181106106845761068361101c565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561071d57507f6100000000000000000000000000000000000000000000000000000000000000826001815181106106ee576106ed61101c565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b801561078857507f6600000000000000000000000000000000000000000000000000000000000000826002815181106107595761075861101c565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80156107f357507f7900000000000000000000000000000000000000000000000000000000000000826003815181106107c4576107c361101c565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b92505050610803565b6000925050505b92915050565b600080fd5b600080fd5b6000819050919050565b61082681610813565b811461083157600080fd5b50565b6000813590506108438161081d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261086e5761086d610849565b5b8235905067ffffffffffffffff81111561088b5761088a61084e565b5b6020830191508360018202830111156108a7576108a6610853565b5b9250929050565b600067ffffffffffffffff82169050919050565b6108cb816108ae565b81146108d657600080fd5b50565b6000813590506108e8816108c2565b92915050565b60008060008060006080868803121561090a57610909610809565b5b600061091888828901610834565b955050602086013567ffffffffffffffff8111156109395761093861080e565b5b61094588828901610858565b94509450506040610958888289016108d9565b9250506060610969888289016108d9565b9150509295509295909350565b6000806040838503121561098d5761098c610809565b5b600061099b85828601610834565b92505060206109ac858286016108d9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109f05780820151818401526020810190506109d5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a18826109b6565b610a2281856109c1565b9350610a328185602086016109d2565b610a3b816109fc565b840191505092915050565b60006020820190508181036000830152610a608184610a0d565b905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000610a9e600e836109c1565b9150610aa982610a68565b602082019050919050565b60006020820190508181036000830152610acd81610a91565b9050919050565b7f436f6e7472616374204944206578697374730000000000000000000000000000600082015250565b6000610b0a6012836109c1565b9150610b1582610ad4565b602082019050919050565b60006020820190508181036000830152610b3981610afd565b9050919050565b7f496e76616c696420495046532043494400000000000000000000000000000000600082015250565b6000610b766010836109c1565b9150610b8182610b40565b602082019050919050565b60006020820190508181036000830152610ba581610b69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c2257607f821691505b602082108103610c3557610c34610bdb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610c9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610c60565b610ca78683610c60565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610ce4610cdf610cda84610813565b610cbf565b610813565b9050919050565b6000819050919050565b610cfe83610cc9565b610d12610d0a82610ceb565b848454610c6d565b825550505050565b600090565b610d27610d1a565b610d32818484610cf5565b505050565b5b81811015610d5657610d4b600082610d1f565b600181019050610d38565b5050565b601f821115610d9b57610d6c81610c3b565b610d7584610c50565b81016020851015610d84578190505b610d98610d9085610c50565b830182610d37565b50505b505050565b600082821c905092915050565b6000610dbe60001984600802610da0565b1980831691505092915050565b6000610dd78383610dad565b9150826002028217905092915050565b610df0826109b6565b67ffffffffffffffff811115610e0957610e08610bac565b5b610e138254610c0a565b610e1e828285610d5a565b600060209050601f831160018114610e515760008415610e3f578287015190505b610e498582610dcb565b865550610eb1565b601f198416610e5f86610c3b565b60005b82811015610e8757848901518255600182019150602085019450602081019050610e62565b86831015610ea45784890151610ea0601f891682610dad565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610ed483856109c1565b9350610ee1838584610eb9565b610eea836109fc565b840190509392505050565b610efe816108ae565b82525050565b60006060820190508181036000830152610f1f818688610ec8565b9050610f2e6020830185610ef5565b610f3b6040830184610ef5565b95945050505050565b7f436f6e7472616374206e6f7420666f756e640000000000000000000000000000600082015250565b6000610f7a6012836109c1565b9150610f8582610f44565b602082019050919050565b60006020820190508181036000830152610fa981610f6d565b9050919050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000610fe6600c836109c1565b9150610ff182610fb0565b602082019050919050565b6000602082019050818103600083015261101581610fd9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207a2027eaa7f12322132a54ec9c8b3737078197b5b8bf1250b41df57bbc46f75c64736f6c63430008140033";

	private static String librariesLinkedBinary;

	public static final String FUNC_GETCONTRACT = "getContract";

	public static final String FUNC_REGISTERCONTRACT = "registerContract";

	public static final Event CONTRACTCREATED_EVENT = new Event("ContractCreated",
		Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>(true) {
		}, new TypeReference<Utf8String>() {
		}, new TypeReference<Uint64>() {
		}, new TypeReference<Uint64>() {
		}));
	;

	@Deprecated
	protected DocumentContract(String contractAddress, Web3j web3j, Credentials credentials,
		BigInteger gasPrice, BigInteger gasLimit) {
		super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
	}

	protected DocumentContract(String contractAddress, Web3j web3j, Credentials credentials,
		ContractGasProvider contractGasProvider) {
		super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
	}

	@Deprecated
	protected DocumentContract(String contractAddress, Web3j web3j,
		TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
		super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
	}

	protected DocumentContract(String contractAddress, Web3j web3j,
		TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
		super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
	}

	public static List<ContractCreatedEventResponse> getContractCreatedEvents(
		TransactionReceipt transactionReceipt) {
		List<Contract.EventValuesWithLog> valueList = staticExtractEventParametersWithLog(CONTRACTCREATED_EVENT,
			transactionReceipt);
		ArrayList<ContractCreatedEventResponse> responses = new ArrayList<ContractCreatedEventResponse>(
			valueList.size());
		for (Contract.EventValuesWithLog eventValues : valueList) {
			ContractCreatedEventResponse typedResponse = new ContractCreatedEventResponse();
			typedResponse.log = eventValues.getLog();
			typedResponse.contractId = (BigInteger)eventValues.getIndexedValues().get(0).getValue();
			typedResponse.ipfsHash = (String)eventValues.getNonIndexedValues().get(0).getValue();
			typedResponse.landlord = (BigInteger)eventValues.getNonIndexedValues().get(1).getValue();
			typedResponse.tenant = (BigInteger)eventValues.getNonIndexedValues().get(2).getValue();
			responses.add(typedResponse);
		}
		return responses;
	}

	public static ContractCreatedEventResponse getContractCreatedEventFromLog(Log log) {
		Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(CONTRACTCREATED_EVENT, log);
		ContractCreatedEventResponse typedResponse = new ContractCreatedEventResponse();
		typedResponse.log = log;
		typedResponse.contractId = (BigInteger)eventValues.getIndexedValues().get(0).getValue();
		typedResponse.ipfsHash = (String)eventValues.getNonIndexedValues().get(0).getValue();
		typedResponse.landlord = (BigInteger)eventValues.getNonIndexedValues().get(1).getValue();
		typedResponse.tenant = (BigInteger)eventValues.getNonIndexedValues().get(2).getValue();
		return typedResponse;
	}

	public Flowable<ContractCreatedEventResponse> contractCreatedEventFlowable(EthFilter filter) {
		return web3j.ethLogFlowable(filter).map(log -> getContractCreatedEventFromLog(log));
	}

	public Flowable<ContractCreatedEventResponse> contractCreatedEventFlowable(
		DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
		EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
		filter.addSingleTopic(EventEncoder.encode(CONTRACTCREATED_EVENT));
		return contractCreatedEventFlowable(filter);
	}

	public RemoteFunctionCall<String> getContract(BigInteger _contractId, BigInteger _requesterId) {
		final Function function = new Function(FUNC_GETCONTRACT,
			Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_contractId),
				new org.web3j.abi.datatypes.generated.Uint64(_requesterId)),
			Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
			}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<TransactionReceipt> registerContract(BigInteger _id, String _ipfsHash,
		BigInteger _landlord, BigInteger _tenant) {
		final Function function = new Function(
			FUNC_REGISTERCONTRACT,
			Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_id),
				new org.web3j.abi.datatypes.Utf8String(_ipfsHash),
				new org.web3j.abi.datatypes.generated.Uint64(_landlord),
				new org.web3j.abi.datatypes.generated.Uint64(_tenant)),
			Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	@Deprecated
	public static DocumentContract load(String contractAddress, Web3j web3j,
		Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
		return new DocumentContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
	}

	@Deprecated
	public static DocumentContract load(String contractAddress, Web3j web3j,
		TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
		return new DocumentContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
	}

	public static DocumentContract load(String contractAddress, Web3j web3j,
		Credentials credentials, ContractGasProvider contractGasProvider) {
		return new DocumentContract(contractAddress, web3j, credentials, contractGasProvider);
	}

	public static DocumentContract load(String contractAddress, Web3j web3j,
		TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
		return new DocumentContract(contractAddress, web3j, transactionManager, contractGasProvider);
	}

	public static RemoteCall<DocumentContract> deploy(Web3j web3j, Credentials credentials,
		ContractGasProvider contractGasProvider, String _owner) {
		String encodedConstructor = FunctionEncoder.encodeConstructor(
			Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner)));
		return deployRemoteCall(DocumentContract.class, web3j, credentials, contractGasProvider, getDeploymentBinary(),
			encodedConstructor);
	}

	public static RemoteCall<DocumentContract> deploy(Web3j web3j,
		TransactionManager transactionManager, ContractGasProvider contractGasProvider,
		String _owner) {
		String encodedConstructor = FunctionEncoder.encodeConstructor(
			Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner)));
		return deployRemoteCall(DocumentContract.class, web3j, transactionManager, contractGasProvider,
			getDeploymentBinary(), encodedConstructor);
	}

	@Deprecated
	public static RemoteCall<DocumentContract> deploy(Web3j web3j, Credentials credentials,
		BigInteger gasPrice, BigInteger gasLimit, String _owner) {
		String encodedConstructor = FunctionEncoder.encodeConstructor(
			Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner)));
		return deployRemoteCall(DocumentContract.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(),
			encodedConstructor);
	}

	@Deprecated
	public static RemoteCall<DocumentContract> deploy(Web3j web3j,
		TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit,
		String _owner) {
		String encodedConstructor = FunctionEncoder.encodeConstructor(
			Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _owner)));
		return deployRemoteCall(DocumentContract.class, web3j, transactionManager, gasPrice, gasLimit,
			getDeploymentBinary(), encodedConstructor);
	}

	public static void linkLibraries(List<Contract.LinkReference> references) {
		librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
	}

	private static String getDeploymentBinary() {
		if (librariesLinkedBinary != null) {
			return librariesLinkedBinary;
		} else {
			return BINARY;
		}
	}

	public static class ContractCreatedEventResponse extends BaseEventResponse {
		public BigInteger contractId;

		public String ipfsHash;

		public BigInteger landlord;

		public BigInteger tenant;
	}
}
